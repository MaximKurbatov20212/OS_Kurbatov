На паре я сказал, что exec делает что-то вроде goto, вот что на самом деле делает exec:

1) Про exec:
exec не создает подпроцесс.
Процесс можно заменить текущую программу на новую, исполнив системный вызов exec(2).
Этот вызов заменяет текст, данные, стек и остальные сегменты виртуального адресного
пространства текущей программы на соответствующие сегменты новой программы.

Функция execvp дублируют действия оболочки, относящиеся к поиску исполняемого файла, 
если указанное имя файла не содержит символ черты (/). Те мы можем команду cat, которая 
явлется исполняемым файлом, можем рапустить через этот системный вызов. 
Путь поиска определяется в окружении переменной PATH.
Если эта переменная не определена, то используется путь поиска ":/bin:/usr/bin" по умолчанию.(В моем случае /bin/cat)
-----------------------------------------------------------------------------------------------------------------------------------------

2) Про wait:
pid_t wait(int *status);

Функция wait приостанавливает выполнение текущего процесса до тех пор, пока дочерний процесс не завершится, 
или до появления сигнала, который либо завершает текущий процесс, либо требует вызвать функцию-обработчик.
Если у процесса несколько дочерних процессов, то будем ждать только первого заверешенного

В перменную status сохраняют информацию о статусе дочернего процесса, но в данном задании это нам это не надо,
поэтому я передал, в качестве аргумента, NULL.
